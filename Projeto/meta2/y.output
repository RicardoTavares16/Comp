Terminals unused in grammar

   ARROW
   RESERVED
   UMINUS
   UPLUS


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE SubProgram RBRACE

    2 SubProgram: MethodDecl SubProgram
    3           | FieldDecl SubProgram
    4           | SEMICOLON SubProgram
    5           | Empty

    6 FieldDecl: PUBLIC STATIC Type ID SubFieldDecl SEMICOLON
    7          | error SEMICOLON

    8 SubFieldDecl: Empty
    9             | COMMA ID SubFieldDecl

   10 Type: BOOL
   11     | INT
   12     | DOUBLE

   13 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

   14 MethodHeader: Type ID LPAR FormalParams RPAR
   15             | VOID ID LPAR FormalParams RPAR

   16 FormalParams: Type ID SubFormalParams
   17             | STRING LSQ RSQ ID
   18             | Empty

   19 SubFormalParams: Empty
   20                | COMMA Type ID SubFormalParams

   21 MethodBody: LBRACE SubMethodBody RBRACE

   22 SubMethodBody: Empty
   23              | SubMethodBody Statement
   24              | SubMethodBody VarDecl

   25 VarDecl: Type ID SubVarDecl SEMICOLON

   26 SubVarDecl: Empty
   27           | COMMA ID SubVarDecl

   28 Statement: LBRACE MultipleStatements RBRACE
   29          | IF LPAR Expr RPAR Statement ELSE Statement
   30          | IF LPAR Expr RPAR Statement
   31          | WHILE LPAR Expr RPAR Statement
   32          | RETURN OptExpr SEMICOLON
   33          | OptMethodinvoAssignParseargs SEMICOLON
   34          | PRINT LPAR ExprStrlit RPAR SEMICOLON
   35          | error SEMICOLON

   36 MultipleStatements: Empty
   37                   | Statement MultipleStatements

   38 OptExpr: Expr
   39        | Empty

   40 OptMethodinvoAssignParseargs: MethodInvocation
   41                             | Assignment
   42                             | ParseArgs
   43                             | Empty

   44 ExprStrlit: Expr
   45           | STRLIT

   46 Assignment: ID ASSIGN Expr

   47 MethodInvocation: ID LPAR OptExprCommaExpr RPAR
   48                 | ID LPAR error RPAR

   49 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   50          | PARSEINT LPAR error RPAR

   51 OptExprCommaExpr: Expr MultipleCommaExpr
   52                 | Empty

   53 MultipleCommaExpr: Empty
   54                  | COMMA Expr MultipleCommaExpr

   55 Expr: Assignment
   56     | ExprWithoutAssign

   57 ExprWithoutAssign: ExprWithoutAssign PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign STAR ExprWithoutAssign
   60                  | ExprWithoutAssign DIV ExprWithoutAssign
   61                  | ExprWithoutAssign MOD ExprWithoutAssign
   62                  | ExprWithoutAssign AND ExprWithoutAssign
   63                  | ExprWithoutAssign OR ExprWithoutAssign
   64                  | ExprWithoutAssign XOR ExprWithoutAssign
   65                  | ExprWithoutAssign LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign EQ ExprWithoutAssign
   68                  | ExprWithoutAssign GE ExprWithoutAssign
   69                  | ExprWithoutAssign GT ExprWithoutAssign
   70                  | ExprWithoutAssign LE ExprWithoutAssign
   71                  | ExprWithoutAssign LT ExprWithoutAssign
   72                  | ExprWithoutAssign NE ExprWithoutAssign
   73                  | MINUS ExprWithoutAssign
   74                  | NOT ExprWithoutAssign
   75                  | PLUS ExprWithoutAssign
   76                  | LPAR ExprWithoutAssign RPAR
   77                  | MethodInvocation
   78                  | ParseArgs
   79                  | ID OptDotLength
   80                  | INTLIT
   81                  | BOOLLIT
   82                  | REALLIT
   83                  | LPAR error RPAR

   84 OptDotLength: DOTLENGTH
   85             | Empty

   86 Empty: %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 7 35 48 50 83
AND (258) 62
ASSIGN (259) 46
STAR (260) 59
COMMA (261) 9 20 27 54
DIV (262) 60
EQ (263) 67
GE (264) 68
GT (265) 69
LBRACE (266) 1 21 28
LE (267) 70
LPAR (268) 14 15 29 30 31 34 47 48 49 50 76 83
LSQ (269) 17 49
LT (270) 71
MINUS (271) 58 73
MOD (272) 61
NE (273) 72
NOT (274) 74
OR (275) 63
PLUS (276) 57 75
RBRACE (277) 1 21 28
RPAR (278) 14 15 29 30 31 34 47 48 49 50 76 83
RSQ (279) 17 49
SEMICOLON (280) 4 6 7 25 32 33 34 35
ARROW (281)
LSHIFT (282) 65
RSHIFT (283) 66
XOR (284) 64
BOOL (285) 10
CLASS (286) 1
DOTLENGTH (287) 84
DOUBLE (288) 12
ELSE (289) 29
IF (290) 29 30
INT (291) 11
PRINT (292) 34
PARSEINT (293) 49 50
PUBLIC (294) 6 13
RETURN (295) 32
STATIC (296) 6 13
STRING (297) 17
VOID (298) 15
WHILE (299) 31
RESERVED (300)
ID (301) 1 6 9 14 15 16 17 20 25 27 46 47 48 49 79
INTLIT (302) 80
REALLIT (303) 82
STRLIT (304) 45
BOOLLIT (305) 81
UMINUS (306)
UPLUS (307)
UNARY (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Program (55)
    on left: 1, on right: 0
SubProgram (56)
    on left: 2 3 4 5, on right: 1 2 3 4
FieldDecl (57)
    on left: 6 7, on right: 3
SubFieldDecl (58)
    on left: 8 9, on right: 6 9
Type (59)
    on left: 10 11 12, on right: 6 14 16 20 25
MethodDecl (60)
    on left: 13, on right: 2
MethodHeader (61)
    on left: 14 15, on right: 13
FormalParams (62)
    on left: 16 17 18, on right: 14 15
SubFormalParams (63)
    on left: 19 20, on right: 16 20
MethodBody (64)
    on left: 21, on right: 13
SubMethodBody (65)
    on left: 22 23 24, on right: 21 23 24
VarDecl (66)
    on left: 25, on right: 24
SubVarDecl (67)
    on left: 26 27, on right: 25 27
Statement (68)
    on left: 28 29 30 31 32 33 34 35, on right: 23 29 30 31 37
MultipleStatements (69)
    on left: 36 37, on right: 28 37
OptExpr (70)
    on left: 38 39, on right: 32
OptMethodinvoAssignParseargs (71)
    on left: 40 41 42 43, on right: 33
ExprStrlit (72)
    on left: 44 45, on right: 34
Assignment (73)
    on left: 46, on right: 41 55
MethodInvocation (74)
    on left: 47 48, on right: 40 77
ParseArgs (75)
    on left: 49 50, on right: 42 78
OptExprCommaExpr (76)
    on left: 51 52, on right: 47
MultipleCommaExpr (77)
    on left: 53 54, on right: 51 54
Expr (78)
    on left: 55 56, on right: 29 30 31 38 44 46 49 51 54
ExprWithoutAssign (79)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
    75 76 77 78 79 80 81 82 83, on right: 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72 73 74 75 76
OptDotLength (80)
    on left: 84 85, on right: 79
Empty (81)
    on left: 86, on right: 5 8 18 19 22 26 36 39 43 52 53 85


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID LBRACE SubProgram RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . LBRACE SubProgram RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID LBRACE . SubProgram RBRACE

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 86 (Empty)

    SubProgram  go to state 9
    FieldDecl   go to state 10
    MethodDecl  go to state 11
    Empty       go to state 12


State 6

    7 FieldDecl: error . SEMICOLON

    SEMICOLON  shift, and go to state 13


State 7

    4 SubProgram: SEMICOLON . SubProgram

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 86 (Empty)

    SubProgram  go to state 14
    FieldDecl   go to state 10
    MethodDecl  go to state 11
    Empty       go to state 12


State 8

    6 FieldDecl: PUBLIC . STATIC Type ID SubFieldDecl SEMICOLON
   13 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 15


State 9

    1 Program: CLASS ID LBRACE SubProgram . RBRACE

    RBRACE  shift, and go to state 16


State 10

    3 SubProgram: FieldDecl . SubProgram

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 86 (Empty)

    SubProgram  go to state 17
    FieldDecl   go to state 10
    MethodDecl  go to state 11
    Empty       go to state 12


State 11

    2 SubProgram: MethodDecl . SubProgram

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7
    PUBLIC     shift, and go to state 8

    RBRACE  reduce using rule 86 (Empty)

    SubProgram  go to state 18
    FieldDecl   go to state 10
    MethodDecl  go to state 11
    Empty       go to state 12


State 12

    5 SubProgram: Empty .

    $default  reduce using rule 5 (SubProgram)


State 13

    7 FieldDecl: error SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 14

    4 SubProgram: SEMICOLON SubProgram .

    $default  reduce using rule 4 (SubProgram)


State 15

    6 FieldDecl: PUBLIC STATIC . Type ID SubFieldDecl SEMICOLON
   13 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    VOID    shift, and go to state 22

    Type          go to state 23
    MethodHeader  go to state 24


State 16

    1 Program: CLASS ID LBRACE SubProgram RBRACE .

    $default  reduce using rule 1 (Program)


State 17

    3 SubProgram: FieldDecl SubProgram .

    $default  reduce using rule 3 (SubProgram)


State 18

    2 SubProgram: MethodDecl SubProgram .

    $default  reduce using rule 2 (SubProgram)


State 19

   10 Type: BOOL .

    $default  reduce using rule 10 (Type)


State 20

   12 Type: DOUBLE .

    $default  reduce using rule 12 (Type)


State 21

   11 Type: INT .

    $default  reduce using rule 11 (Type)


State 22

   15 MethodHeader: VOID . ID LPAR FormalParams RPAR

    ID  shift, and go to state 25


State 23

    6 FieldDecl: PUBLIC STATIC Type . ID SubFieldDecl SEMICOLON
   14 MethodHeader: Type . ID LPAR FormalParams RPAR

    ID  shift, and go to state 26


State 24

   13 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 27

    MethodBody  go to state 28


State 25

   15 MethodHeader: VOID ID . LPAR FormalParams RPAR

    LPAR  shift, and go to state 29


State 26

    6 FieldDecl: PUBLIC STATIC Type ID . SubFieldDecl SEMICOLON
   14 MethodHeader: Type ID . LPAR FormalParams RPAR

    COMMA  shift, and go to state 30
    LPAR   shift, and go to state 31

    $default  reduce using rule 86 (Empty)

    SubFieldDecl  go to state 32
    Empty         go to state 33


State 27

   21 MethodBody: LBRACE . SubMethodBody RBRACE

    $default  reduce using rule 86 (Empty)

    SubMethodBody  go to state 34
    Empty          go to state 35


State 28

   13 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 13 (MethodDecl)


State 29

   15 MethodHeader: VOID ID LPAR . FormalParams RPAR

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    STRING  shift, and go to state 36

    $default  reduce using rule 86 (Empty)

    Type          go to state 37
    FormalParams  go to state 38
    Empty         go to state 39


State 30

    9 SubFieldDecl: COMMA . ID SubFieldDecl

    ID  shift, and go to state 40


State 31

   14 MethodHeader: Type ID LPAR . FormalParams RPAR

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21
    STRING  shift, and go to state 36

    $default  reduce using rule 86 (Empty)

    Type          go to state 37
    FormalParams  go to state 41
    Empty         go to state 39


State 32

    6 FieldDecl: PUBLIC STATIC Type ID SubFieldDecl . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 33

    8 SubFieldDecl: Empty .

    $default  reduce using rule 8 (SubFieldDecl)


State 34

   21 MethodBody: LBRACE SubMethodBody . RBRACE
   23 SubMethodBody: SubMethodBody . Statement
   24              | SubMethodBody . VarDecl

    error     shift, and go to state 43
    LBRACE    shift, and go to state 44
    RBRACE    shift, and go to state 45
    BOOL      shift, and go to state 19
    DOUBLE    shift, and go to state 20
    IF        shift, and go to state 46
    INT       shift, and go to state 21
    PRINT     shift, and go to state 47
    PARSEINT  shift, and go to state 48
    RETURN    shift, and go to state 49
    WHILE     shift, and go to state 50
    ID        shift, and go to state 51

    SEMICOLON  reduce using rule 86 (Empty)

    Type                          go to state 52
    VarDecl                       go to state 53
    Statement                     go to state 54
    OptMethodinvoAssignParseargs  go to state 55
    Assignment                    go to state 56
    MethodInvocation              go to state 57
    ParseArgs                     go to state 58
    Empty                         go to state 59


State 35

   22 SubMethodBody: Empty .

    $default  reduce using rule 22 (SubMethodBody)


State 36

   17 FormalParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 60


State 37

   16 FormalParams: Type . ID SubFormalParams

    ID  shift, and go to state 61


State 38

   15 MethodHeader: VOID ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 62


State 39

   18 FormalParams: Empty .

    $default  reduce using rule 18 (FormalParams)


State 40

    9 SubFieldDecl: COMMA ID . SubFieldDecl

    COMMA  shift, and go to state 30

    $default  reduce using rule 86 (Empty)

    SubFieldDecl  go to state 63
    Empty         go to state 33


State 41

   14 MethodHeader: Type ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 64


State 42

    6 FieldDecl: PUBLIC STATIC Type ID SubFieldDecl SEMICOLON .

    $default  reduce using rule 6 (FieldDecl)


State 43

   35 Statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 44

   28 Statement: LBRACE . MultipleStatements RBRACE

    error     shift, and go to state 43
    LBRACE    shift, and go to state 44
    IF        shift, and go to state 46
    PRINT     shift, and go to state 47
    PARSEINT  shift, and go to state 48
    RETURN    shift, and go to state 49
    WHILE     shift, and go to state 50
    ID        shift, and go to state 51

    RBRACE     reduce using rule 86 (Empty)
    SEMICOLON  reduce using rule 86 (Empty)

    Statement                     go to state 66
    MultipleStatements            go to state 67
    OptMethodinvoAssignParseargs  go to state 55
    Assignment                    go to state 56
    MethodInvocation              go to state 57
    ParseArgs                     go to state 58
    Empty                         go to state 68


State 45

   21 MethodBody: LBRACE SubMethodBody RBRACE .

    $default  reduce using rule 21 (MethodBody)


State 46

   29 Statement: IF . LPAR Expr RPAR Statement ELSE Statement
   30          | IF . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 69


State 47

   34 Statement: PRINT . LPAR ExprStrlit RPAR SEMICOLON

    LPAR  shift, and go to state 70


State 48

   49 ParseArgs: PARSEINT . LPAR ID LSQ Expr RSQ RPAR
   50          | PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 71


State 49

   32 Statement: RETURN . OptExpr SEMICOLON

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 76
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    $default  reduce using rule 86 (Empty)

    OptExpr            go to state 80
    Assignment         go to state 81
    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    Expr               go to state 84
    ExprWithoutAssign  go to state 85
    Empty              go to state 86


State 50

   31 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 87


State 51

   46 Assignment: ID . ASSIGN Expr
   47 MethodInvocation: ID . LPAR OptExprCommaExpr RPAR
   48                 | ID . LPAR error RPAR

    ASSIGN  shift, and go to state 88
    LPAR    shift, and go to state 89


State 52

   25 VarDecl: Type . ID SubVarDecl SEMICOLON

    ID  shift, and go to state 90


State 53

   24 SubMethodBody: SubMethodBody VarDecl .

    $default  reduce using rule 24 (SubMethodBody)


State 54

   23 SubMethodBody: SubMethodBody Statement .

    $default  reduce using rule 23 (SubMethodBody)


State 55

   33 Statement: OptMethodinvoAssignParseargs . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 56

   41 OptMethodinvoAssignParseargs: Assignment .

    $default  reduce using rule 41 (OptMethodinvoAssignParseargs)


State 57

   40 OptMethodinvoAssignParseargs: MethodInvocation .

    $default  reduce using rule 40 (OptMethodinvoAssignParseargs)


State 58

   42 OptMethodinvoAssignParseargs: ParseArgs .

    $default  reduce using rule 42 (OptMethodinvoAssignParseargs)


State 59

   43 OptMethodinvoAssignParseargs: Empty .

    $default  reduce using rule 43 (OptMethodinvoAssignParseargs)


State 60

   17 FormalParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 92


State 61

   16 FormalParams: Type ID . SubFormalParams

    COMMA  shift, and go to state 93

    $default  reduce using rule 86 (Empty)

    SubFormalParams  go to state 94
    Empty            go to state 95


State 62

   15 MethodHeader: VOID ID LPAR FormalParams RPAR .

    $default  reduce using rule 15 (MethodHeader)


State 63

    9 SubFieldDecl: COMMA ID SubFieldDecl .

    $default  reduce using rule 9 (SubFieldDecl)


State 64

   14 MethodHeader: Type ID LPAR FormalParams RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 65

   35 Statement: error SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 66

   37 MultipleStatements: Statement . MultipleStatements

    error     shift, and go to state 43
    LBRACE    shift, and go to state 44
    IF        shift, and go to state 46
    PRINT     shift, and go to state 47
    PARSEINT  shift, and go to state 48
    RETURN    shift, and go to state 49
    WHILE     shift, and go to state 50
    ID        shift, and go to state 51

    RBRACE     reduce using rule 86 (Empty)
    SEMICOLON  reduce using rule 86 (Empty)

    Statement                     go to state 66
    MultipleStatements            go to state 96
    OptMethodinvoAssignParseargs  go to state 55
    Assignment                    go to state 56
    MethodInvocation              go to state 57
    ParseArgs                     go to state 58
    Empty                         go to state 68


State 67

   28 Statement: LBRACE MultipleStatements . RBRACE

    RBRACE  shift, and go to state 97


State 68

   36 MultipleStatements: Empty .
   43 OptMethodinvoAssignParseargs: Empty .

    SEMICOLON  reduce using rule 43 (OptMethodinvoAssignParseargs)
    $default   reduce using rule 36 (MultipleStatements)


State 69

   29 Statement: IF LPAR . Expr RPAR Statement ELSE Statement
   30          | IF LPAR . Expr RPAR Statement

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 76
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    Assignment         go to state 81
    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    Expr               go to state 98
    ExprWithoutAssign  go to state 85


State 70

   34 Statement: PRINT LPAR . ExprStrlit RPAR SEMICOLON

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 76
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    STRLIT    shift, and go to state 99
    BOOLLIT   shift, and go to state 79

    ExprStrlit         go to state 100
    Assignment         go to state 81
    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    Expr               go to state 101
    ExprWithoutAssign  go to state 85


State 71

   49 ParseArgs: PARSEINT LPAR . ID LSQ Expr RSQ RPAR
   50          | PARSEINT LPAR . error RPAR

    error  shift, and go to state 102
    ID     shift, and go to state 103


State 72

   76 ExprWithoutAssign: LPAR . ExprWithoutAssign RPAR
   83                  | LPAR . error RPAR

    error     shift, and go to state 104
    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 106


State 73

   73 ExprWithoutAssign: MINUS . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 107


State 74

   74 ExprWithoutAssign: NOT . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 108


State 75

   75 ExprWithoutAssign: PLUS . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 109


State 76

   46 Assignment: ID . ASSIGN Expr
   47 MethodInvocation: ID . LPAR OptExprCommaExpr RPAR
   48                 | ID . LPAR error RPAR
   79 ExprWithoutAssign: ID . OptDotLength

    ASSIGN     shift, and go to state 88
    LPAR       shift, and go to state 89
    DOTLENGTH  shift, and go to state 110

    $default  reduce using rule 86 (Empty)

    OptDotLength  go to state 111
    Empty         go to state 112


State 77

   80 ExprWithoutAssign: INTLIT .

    $default  reduce using rule 80 (ExprWithoutAssign)


State 78

   82 ExprWithoutAssign: REALLIT .

    $default  reduce using rule 82 (ExprWithoutAssign)


State 79

   81 ExprWithoutAssign: BOOLLIT .

    $default  reduce using rule 81 (ExprWithoutAssign)


State 80

   32 Statement: RETURN OptExpr . SEMICOLON

    SEMICOLON  shift, and go to state 113


State 81

   55 Expr: Assignment .

    $default  reduce using rule 55 (Expr)


State 82

   77 ExprWithoutAssign: MethodInvocation .

    $default  reduce using rule 77 (ExprWithoutAssign)


State 83

   78 ExprWithoutAssign: ParseArgs .

    $default  reduce using rule 78 (ExprWithoutAssign)


State 84

   38 OptExpr: Expr .

    $default  reduce using rule 38 (OptExpr)


State 85

   56 Expr: ExprWithoutAssign .
   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    AND     shift, and go to state 114
    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    OR      shift, and go to state 125
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128
    XOR     shift, and go to state 129

    $default  reduce using rule 56 (Expr)


State 86

   39 OptExpr: Empty .

    $default  reduce using rule 39 (OptExpr)


State 87

   31 Statement: WHILE LPAR . Expr RPAR Statement

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 76
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    Assignment         go to state 81
    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    Expr               go to state 130
    ExprWithoutAssign  go to state 85


State 88

   46 Assignment: ID ASSIGN . Expr

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 76
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    Assignment         go to state 81
    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    Expr               go to state 131
    ExprWithoutAssign  go to state 85


State 89

   47 MethodInvocation: ID LPAR . OptExprCommaExpr RPAR
   48                 | ID LPAR . error RPAR

    error     shift, and go to state 132
    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 76
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    RPAR  reduce using rule 86 (Empty)

    Assignment         go to state 81
    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    OptExprCommaExpr   go to state 133
    Expr               go to state 134
    ExprWithoutAssign  go to state 85
    Empty              go to state 135


State 90

   25 VarDecl: Type ID . SubVarDecl SEMICOLON

    COMMA  shift, and go to state 136

    $default  reduce using rule 86 (Empty)

    SubVarDecl  go to state 137
    Empty       go to state 138


State 91

   33 Statement: OptMethodinvoAssignParseargs SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 92

   17 FormalParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 139


State 93

   20 SubFormalParams: COMMA . Type ID SubFormalParams

    BOOL    shift, and go to state 19
    DOUBLE  shift, and go to state 20
    INT     shift, and go to state 21

    Type  go to state 140


State 94

   16 FormalParams: Type ID SubFormalParams .

    $default  reduce using rule 16 (FormalParams)


State 95

   19 SubFormalParams: Empty .

    $default  reduce using rule 19 (SubFormalParams)


State 96

   37 MultipleStatements: Statement MultipleStatements .

    $default  reduce using rule 37 (MultipleStatements)


State 97

   28 Statement: LBRACE MultipleStatements RBRACE .

    $default  reduce using rule 28 (Statement)


State 98

   29 Statement: IF LPAR Expr . RPAR Statement ELSE Statement
   30          | IF LPAR Expr . RPAR Statement

    RPAR  shift, and go to state 141


State 99

   45 ExprStrlit: STRLIT .

    $default  reduce using rule 45 (ExprStrlit)


State 100

   34 Statement: PRINT LPAR ExprStrlit . RPAR SEMICOLON

    RPAR  shift, and go to state 142


State 101

   44 ExprStrlit: Expr .

    $default  reduce using rule 44 (ExprStrlit)


State 102

   50 ParseArgs: PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 143


State 103

   49 ParseArgs: PARSEINT LPAR ID . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 144


State 104

   83 ExprWithoutAssign: LPAR error . RPAR

    RPAR  shift, and go to state 145


State 105

   47 MethodInvocation: ID . LPAR OptExprCommaExpr RPAR
   48                 | ID . LPAR error RPAR
   79 ExprWithoutAssign: ID . OptDotLength

    LPAR       shift, and go to state 89
    DOTLENGTH  shift, and go to state 110

    $default  reduce using rule 86 (Empty)

    OptDotLength  go to state 111
    Empty         go to state 112


State 106

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign
   76                  | LPAR ExprWithoutAssign . RPAR

    AND     shift, and go to state 114
    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    OR      shift, and go to state 125
    PLUS    shift, and go to state 126
    RPAR    shift, and go to state 146
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128
    XOR     shift, and go to state 129


State 107

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign
   73                  | MINUS ExprWithoutAssign .

    $default  reduce using rule 73 (ExprWithoutAssign)


State 108

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign
   74                  | NOT ExprWithoutAssign .

    $default  reduce using rule 74 (ExprWithoutAssign)


State 109

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign
   75                  | PLUS ExprWithoutAssign .

    $default  reduce using rule 75 (ExprWithoutAssign)


State 110

   84 OptDotLength: DOTLENGTH .

    $default  reduce using rule 84 (OptDotLength)


State 111

   79 ExprWithoutAssign: ID OptDotLength .

    $default  reduce using rule 79 (ExprWithoutAssign)


State 112

   85 OptDotLength: Empty .

    $default  reduce using rule 85 (OptDotLength)


State 113

   32 Statement: RETURN OptExpr SEMICOLON .

    $default  reduce using rule 32 (Statement)


State 114

   62 ExprWithoutAssign: ExprWithoutAssign AND . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 147


State 115

   59 ExprWithoutAssign: ExprWithoutAssign STAR . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 148


State 116

   60 ExprWithoutAssign: ExprWithoutAssign DIV . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 149


State 117

   67 ExprWithoutAssign: ExprWithoutAssign EQ . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 150


State 118

   68 ExprWithoutAssign: ExprWithoutAssign GE . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 151


State 119

   69 ExprWithoutAssign: ExprWithoutAssign GT . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 152


State 120

   70 ExprWithoutAssign: ExprWithoutAssign LE . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 153


State 121

   71 ExprWithoutAssign: ExprWithoutAssign LT . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 154


State 122

   58 ExprWithoutAssign: ExprWithoutAssign MINUS . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 155


State 123

   61 ExprWithoutAssign: ExprWithoutAssign MOD . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 156


State 124

   72 ExprWithoutAssign: ExprWithoutAssign NE . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 157


State 125

   63 ExprWithoutAssign: ExprWithoutAssign OR . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 158


State 126

   57 ExprWithoutAssign: ExprWithoutAssign PLUS . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 159


State 127

   65 ExprWithoutAssign: ExprWithoutAssign LSHIFT . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 160


State 128

   66 ExprWithoutAssign: ExprWithoutAssign RSHIFT . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 161


State 129

   64 ExprWithoutAssign: ExprWithoutAssign XOR . ExprWithoutAssign

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 105
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    ExprWithoutAssign  go to state 162


State 130

   31 Statement: WHILE LPAR Expr . RPAR Statement

    RPAR  shift, and go to state 163


State 131

   46 Assignment: ID ASSIGN Expr .

    $default  reduce using rule 46 (Assignment)


State 132

   48 MethodInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 164


State 133

   47 MethodInvocation: ID LPAR OptExprCommaExpr . RPAR

    RPAR  shift, and go to state 165


State 134

   51 OptExprCommaExpr: Expr . MultipleCommaExpr

    COMMA  shift, and go to state 166

    $default  reduce using rule 86 (Empty)

    MultipleCommaExpr  go to state 167
    Empty              go to state 168


State 135

   52 OptExprCommaExpr: Empty .

    $default  reduce using rule 52 (OptExprCommaExpr)


State 136

   27 SubVarDecl: COMMA . ID SubVarDecl

    ID  shift, and go to state 169


State 137

   25 VarDecl: Type ID SubVarDecl . SEMICOLON

    SEMICOLON  shift, and go to state 170


State 138

   26 SubVarDecl: Empty .

    $default  reduce using rule 26 (SubVarDecl)


State 139

   17 FormalParams: STRING LSQ RSQ ID .

    $default  reduce using rule 17 (FormalParams)


State 140

   20 SubFormalParams: COMMA Type . ID SubFormalParams

    ID  shift, and go to state 171


State 141

   29 Statement: IF LPAR Expr RPAR . Statement ELSE Statement
   30          | IF LPAR Expr RPAR . Statement

    error     shift, and go to state 43
    LBRACE    shift, and go to state 44
    IF        shift, and go to state 46
    PRINT     shift, and go to state 47
    PARSEINT  shift, and go to state 48
    RETURN    shift, and go to state 49
    WHILE     shift, and go to state 50
    ID        shift, and go to state 51

    SEMICOLON  reduce using rule 86 (Empty)

    Statement                     go to state 172
    OptMethodinvoAssignParseargs  go to state 55
    Assignment                    go to state 56
    MethodInvocation              go to state 57
    ParseArgs                     go to state 58
    Empty                         go to state 59


State 142

   34 Statement: PRINT LPAR ExprStrlit RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 173


State 143

   50 ParseArgs: PARSEINT LPAR error RPAR .

    $default  reduce using rule 50 (ParseArgs)


State 144

   49 ParseArgs: PARSEINT LPAR ID LSQ . Expr RSQ RPAR

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 76
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    Assignment         go to state 81
    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    Expr               go to state 174
    ExprWithoutAssign  go to state 85


State 145

   83 ExprWithoutAssign: LPAR error RPAR .

    $default  reduce using rule 83 (ExprWithoutAssign)


State 146

   76 ExprWithoutAssign: LPAR ExprWithoutAssign RPAR .

    $default  reduce using rule 76 (ExprWithoutAssign)


State 147

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   62                  | ExprWithoutAssign AND ExprWithoutAssign .
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128
    XOR     shift, and go to state 129

    $default  reduce using rule 62 (ExprWithoutAssign)


State 148

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   59                  | ExprWithoutAssign STAR ExprWithoutAssign .
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    $default  reduce using rule 59 (ExprWithoutAssign)


State 149

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   60                  | ExprWithoutAssign DIV ExprWithoutAssign .
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    $default  reduce using rule 60 (ExprWithoutAssign)


State 150

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   67                  | ExprWithoutAssign EQ ExprWithoutAssign .
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 67 (ExprWithoutAssign)


State 151

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   68                  | ExprWithoutAssign GE ExprWithoutAssign .
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 68 (ExprWithoutAssign)


State 152

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   69                  | ExprWithoutAssign GT ExprWithoutAssign .
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 69 (ExprWithoutAssign)


State 153

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   70                  | ExprWithoutAssign LE ExprWithoutAssign .
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 70 (ExprWithoutAssign)


State 154

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   71                  | ExprWithoutAssign LT ExprWithoutAssign .
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 71 (ExprWithoutAssign)


State 155

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   58                  | ExprWithoutAssign MINUS ExprWithoutAssign .
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR  shift, and go to state 115
    DIV   shift, and go to state 116
    MOD   shift, and go to state 123

    $default  reduce using rule 58 (ExprWithoutAssign)


State 156

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   61                  | ExprWithoutAssign MOD ExprWithoutAssign .
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    $default  reduce using rule 61 (ExprWithoutAssign)


State 157

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign
   72                  | ExprWithoutAssign NE ExprWithoutAssign .

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 72 (ExprWithoutAssign)


State 158

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   63                  | ExprWithoutAssign OR ExprWithoutAssign .
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    AND     shift, and go to state 114
    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128
    XOR     shift, and go to state 129

    $default  reduce using rule 63 (ExprWithoutAssign)


State 159

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   57                  | ExprWithoutAssign PLUS ExprWithoutAssign .
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR  shift, and go to state 115
    DIV   shift, and go to state 116
    MOD   shift, and go to state 123

    $default  reduce using rule 57 (ExprWithoutAssign)


State 160

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   65                  | ExprWithoutAssign LSHIFT ExprWithoutAssign .
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR   shift, and go to state 115
    DIV    shift, and go to state 116
    MINUS  shift, and go to state 122
    MOD    shift, and go to state 123
    PLUS   shift, and go to state 126

    $default  reduce using rule 65 (ExprWithoutAssign)


State 161

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign RSHIFT ExprWithoutAssign .
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR   shift, and go to state 115
    DIV    shift, and go to state 116
    MINUS  shift, and go to state 122
    MOD    shift, and go to state 123
    PLUS   shift, and go to state 126

    $default  reduce using rule 66 (ExprWithoutAssign)


State 162

   57 ExprWithoutAssign: ExprWithoutAssign . PLUS ExprWithoutAssign
   58                  | ExprWithoutAssign . MINUS ExprWithoutAssign
   59                  | ExprWithoutAssign . STAR ExprWithoutAssign
   60                  | ExprWithoutAssign . DIV ExprWithoutAssign
   61                  | ExprWithoutAssign . MOD ExprWithoutAssign
   62                  | ExprWithoutAssign . AND ExprWithoutAssign
   63                  | ExprWithoutAssign . OR ExprWithoutAssign
   64                  | ExprWithoutAssign . XOR ExprWithoutAssign
   64                  | ExprWithoutAssign XOR ExprWithoutAssign .
   65                  | ExprWithoutAssign . LSHIFT ExprWithoutAssign
   66                  | ExprWithoutAssign . RSHIFT ExprWithoutAssign
   67                  | ExprWithoutAssign . EQ ExprWithoutAssign
   68                  | ExprWithoutAssign . GE ExprWithoutAssign
   69                  | ExprWithoutAssign . GT ExprWithoutAssign
   70                  | ExprWithoutAssign . LE ExprWithoutAssign
   71                  | ExprWithoutAssign . LT ExprWithoutAssign
   72                  | ExprWithoutAssign . NE ExprWithoutAssign

    STAR    shift, and go to state 115
    DIV     shift, and go to state 116
    EQ      shift, and go to state 117
    GE      shift, and go to state 118
    GT      shift, and go to state 119
    LE      shift, and go to state 120
    LT      shift, and go to state 121
    MINUS   shift, and go to state 122
    MOD     shift, and go to state 123
    NE      shift, and go to state 124
    PLUS    shift, and go to state 126
    LSHIFT  shift, and go to state 127
    RSHIFT  shift, and go to state 128

    $default  reduce using rule 64 (ExprWithoutAssign)


State 163

   31 Statement: WHILE LPAR Expr RPAR . Statement

    error     shift, and go to state 43
    LBRACE    shift, and go to state 44
    IF        shift, and go to state 46
    PRINT     shift, and go to state 47
    PARSEINT  shift, and go to state 48
    RETURN    shift, and go to state 49
    WHILE     shift, and go to state 50
    ID        shift, and go to state 51

    SEMICOLON  reduce using rule 86 (Empty)

    Statement                     go to state 175
    OptMethodinvoAssignParseargs  go to state 55
    Assignment                    go to state 56
    MethodInvocation              go to state 57
    ParseArgs                     go to state 58
    Empty                         go to state 59


State 164

   48 MethodInvocation: ID LPAR error RPAR .

    $default  reduce using rule 48 (MethodInvocation)


State 165

   47 MethodInvocation: ID LPAR OptExprCommaExpr RPAR .

    $default  reduce using rule 47 (MethodInvocation)


State 166

   54 MultipleCommaExpr: COMMA . Expr MultipleCommaExpr

    LPAR      shift, and go to state 72
    MINUS     shift, and go to state 73
    NOT       shift, and go to state 74
    PLUS      shift, and go to state 75
    PARSEINT  shift, and go to state 48
    ID        shift, and go to state 76
    INTLIT    shift, and go to state 77
    REALLIT   shift, and go to state 78
    BOOLLIT   shift, and go to state 79

    Assignment         go to state 81
    MethodInvocation   go to state 82
    ParseArgs          go to state 83
    Expr               go to state 176
    ExprWithoutAssign  go to state 85


State 167

   51 OptExprCommaExpr: Expr MultipleCommaExpr .

    $default  reduce using rule 51 (OptExprCommaExpr)


State 168

   53 MultipleCommaExpr: Empty .

    $default  reduce using rule 53 (MultipleCommaExpr)


State 169

   27 SubVarDecl: COMMA ID . SubVarDecl

    COMMA  shift, and go to state 136

    $default  reduce using rule 86 (Empty)

    SubVarDecl  go to state 177
    Empty       go to state 138


State 170

   25 VarDecl: Type ID SubVarDecl SEMICOLON .

    $default  reduce using rule 25 (VarDecl)


State 171

   20 SubFormalParams: COMMA Type ID . SubFormalParams

    COMMA  shift, and go to state 93

    $default  reduce using rule 86 (Empty)

    SubFormalParams  go to state 178
    Empty            go to state 95


State 172

   29 Statement: IF LPAR Expr RPAR Statement . ELSE Statement
   30          | IF LPAR Expr RPAR Statement .

    ELSE  shift, and go to state 179

    $default  reduce using rule 30 (Statement)


State 173

   34 Statement: PRINT LPAR ExprStrlit RPAR SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 174

   49 ParseArgs: PARSEINT LPAR ID LSQ Expr . RSQ RPAR

    RSQ  shift, and go to state 180


State 175

   31 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 31 (Statement)


State 176

   54 MultipleCommaExpr: COMMA Expr . MultipleCommaExpr

    COMMA  shift, and go to state 166

    $default  reduce using rule 86 (Empty)

    MultipleCommaExpr  go to state 181
    Empty              go to state 168


State 177

   27 SubVarDecl: COMMA ID SubVarDecl .

    $default  reduce using rule 27 (SubVarDecl)


State 178

   20 SubFormalParams: COMMA Type ID SubFormalParams .

    $default  reduce using rule 20 (SubFormalParams)


State 179

   29 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    error     shift, and go to state 43
    LBRACE    shift, and go to state 44
    IF        shift, and go to state 46
    PRINT     shift, and go to state 47
    PARSEINT  shift, and go to state 48
    RETURN    shift, and go to state 49
    WHILE     shift, and go to state 50
    ID        shift, and go to state 51

    SEMICOLON  reduce using rule 86 (Empty)

    Statement                     go to state 182
    OptMethodinvoAssignParseargs  go to state 55
    Assignment                    go to state 56
    MethodInvocation              go to state 57
    ParseArgs                     go to state 58
    Empty                         go to state 59


State 180

   49 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 183


State 181

   54 MultipleCommaExpr: COMMA Expr MultipleCommaExpr .

    $default  reduce using rule 54 (MultipleCommaExpr)


State 182

   29 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 29 (Statement)


State 183

   49 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR .

    $default  reduce using rule 49 (ParseArgs)
